name: Test Suite

on:
  push:
    branches: [ master, development ]
  pull_request:
    branches: [ master, development ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Run tests
      run: bun test

    - name: Generate test report
      run: |
        echo "# Test Results Summary" > test-summary.md
        echo "" >> test-summary.md
        echo "## Latest Test Run" >> test-summary.md
        echo "" >> test-summary.md
        echo "- **Date**: $(date)" >> test-summary.md
        echo "- **Commit**: $(git rev-parse --short HEAD)" >> test-summary.md
        echo "- **Branch**: $(git branch --show-current)" >> test-summary.md
        echo "" >> test-summary.md
        echo "\`\`\`" >> test-summary.md
        bun test 2>&1 | tee -a test-summary.md
        echo "\`\`\`" >> test-summary.md

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.node-version }}
        path: test-summary.md

  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Run linter
      run: bun run lint

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Build project
      run: bun run build

    - name: Build executable
      run: bun run build:exe

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: vorg-executable
        path: dist/vorg.exe